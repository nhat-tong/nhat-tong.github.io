<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terraform on Home</title>
    <link>https://blog.nhat-tong.com/tags/terraform/</link>
    <description>Recent content in terraform on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>thqnhat@outlook.com (Nhat Tong)</managingEditor>
    <webMaster>thqnhat@outlook.com (Nhat Tong)</webMaster>
    <lastBuildDate>Sun, 14 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.nhat-tong.com/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GCP-IAM (Identity and Access Management)</title>
      <link>https://blog.nhat-tong.com/post/2021/02/gcp/iam-breakdown/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      <author>thqnhat@outlook.com (Nhat Tong)</author>
      <guid>https://blog.nhat-tong.com/post/2021/02/gcp/iam-breakdown/</guid>
      <description>&lt;p&gt;In this article, we discuss an important part of GCP: IAM or Identity and Access Management.&lt;/p&gt;
&lt;p&gt;Before going into details, let&amp;rsquo;s take a quick look at IAM Hierarchy.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../images/cloud_iam_resource_hierarchy_2.png&#34; alt=&#34;Cloud IAM Hierarchy&#34;&gt;&lt;/p&gt;
&lt;p&gt;As you can see, IAM includes some basic objects at each level: organization, folders, projects and resources.
GCP allows you to set IAM policies at any of these levels.&lt;/p&gt;
&lt;p&gt;Understanding these IAM objects and how to set IAM at the corresponding level will help you to design your solution following Google&amp;rsquo;s recommended best practices.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GCP-Cloud Function</title>
      <link></link>
      <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
      <author>thqnhat@outlook.com (Nhat Tong)</author>
      <guid></guid>
      <description></description>
    </item>
    
    <item>
      <title>GCP-Instance groups</title>
      <link></link>
      <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
      <author>thqnhat@outlook.com (Nhat Tong)</author>
      <guid></guid>
      <description></description>
    </item>
    
    <item>
      <title>GCP-Sharing networks across projects</title>
      <link>https://blog.nhat-tong.com/post/2021/01/gcp/sharing-networks/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate>
      <author>thqnhat@outlook.com (Nhat Tong)</author>
      <guid>https://blog.nhat-tong.com/post/2021/01/gcp/sharing-networks/</guid>
      <description>&lt;p&gt;In GCP, you have two options for sharing networks across GCP projects: Shared VPC and VPC Network Peering.&lt;/p&gt;
&lt;p&gt;In this article, we discuss more detail its features and how to implement them.&lt;/p&gt;
&lt;h3 id=&#34;shared-vpc-overview&#34;&gt;&lt;strong&gt;Shared VPC overview&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Shared VPC is a centralized approach to multi-project networking allowing an organization to connect resources from multiple projects to a common Virtual Private Cloud (VPC) network, so that they can communicate with each other securely and efficiently using &lt;strong&gt;internal IPs&lt;/strong&gt; from that network.&lt;/li&gt;
&lt;li&gt;When you use Shared VPC, you designate a project as a host project and attach one or more other service projects to it&lt;/li&gt;
&lt;li&gt;Shared VPC network is created and managed by a Shared VPC Admin which is nominated by an Organization Admin&lt;/li&gt;
&lt;li&gt;Shared VPC Admin is responsible to enable shared vpc feature on the host project and attach service projects to the host project. He can also delegate access to some or all subnets in the shared VPC network by granting the &lt;em&gt;compute.networkUser&lt;/em&gt; role for Service Project Admins at the project level or the subnet level&lt;/li&gt;
&lt;li&gt;Service Project Admins in his turn maintain ownership and control over resources defined in their service projects. They could create and manage resources (vm instances, instance templates, instance groups, static internal ip, load balancers) in the shared VPC.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;../images/gcp_shared_vpc_example.png&#34; alt=&#34;shared vpc&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Azure-Nat Gateway with Virtual Network Appliance</title>
      <link>https://blog.nhat-tong.com/post/2020/12/azure/azure-nat-gateway-proxyout/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      <author>thqnhat@outlook.com (Nhat Tong)</author>
      <guid>https://blog.nhat-tong.com/post/2020/12/azure/azure-nat-gateway-proxyout/</guid>
      <description>&lt;p&gt;In contrast of Google Cloud Platform, Azure Virtual Machine has access to the Internet by default (even if your vm doesn&amp;rsquo;t have a public ip). You don&amp;rsquo;t need to do anything to have internet access.&lt;/p&gt;
&lt;p&gt;But what if you would like to control the web traffic (http/https) to the internet from your virtual networks (due to the company&amp;rsquo;s policy for example). You may need to establish a single access point to the internet on which you could control the outbound access.&lt;/p&gt;
&lt;p&gt;In the previous article, we discussed the Hub-Spoke Topology. We will expand this architecture to cover our topic today.&lt;/p&gt;
&lt;h3 id=&#34;our-architecture-modified&#34;&gt;&lt;strong&gt;Our architecture modified:&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;As you saw in the previous architecture, we have three virtual networks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hub virtual network (hub-vnet): region France Central&lt;/li&gt;
&lt;li&gt;Spoke 1 virtual network (finance-vnet): region West Europe&lt;/li&gt;
&lt;li&gt;Spoke 2 virtual network (it-vnet): region North Europe&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We need to control the web traffic from all spoke networks to the Internet .&lt;/p&gt;
&lt;p&gt;We will add a new virtual network:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Proxyout virtual network (proxyout-vnet): region France Central&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On this new virtual network, we place two virtual machines (proxyout) behind a Azure Load Balancer Standard to receive/control  the web traffic (http/https) from other spoke networks. You could install a middleware (&lt;em&gt;squid&lt;/em&gt;) to allow/deny the access.&lt;/p&gt;
&lt;p&gt;So, our architecture will be the following:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../images/59_azure_hub_spoke_nva.png&#34; alt=&#34;Proxyout Architecture&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Azure-Hub Spoke topology</title>
      <link>https://blog.nhat-tong.com/post/2020/12/azure/azure-hub-spoke-topology/</link>
      <pubDate>Sat, 19 Dec 2020 00:00:00 +0000</pubDate>
      <author>thqnhat@outlook.com (Nhat Tong)</author>
      <guid>https://blog.nhat-tong.com/post/2020/12/azure/azure-hub-spoke-topology/</guid>
      <description>&lt;p&gt;Today, we will implement a hub-spoke topology in Azure.&lt;/p&gt;
&lt;p&gt;The hub is a virtual network in Azure that acts as a central point of connectivity to your on-premises network.&lt;/p&gt;
&lt;p&gt;The spokes are virtual networks that peer with the hub and can be used to isolate workloads.&lt;/p&gt;
&lt;p&gt;For more information, we refer to &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/architecture/reference-architectures/hybrid-networking/hub-spoke&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;this document.&lt;/u&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In our case-study, we don&amp;rsquo;t have &lt;em&gt;on-premises network&lt;/em&gt;, so the architecture will be adjusted a little bit:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../images/58_azure_hub_spoke.png&#34; alt=&#34;Our hub-spoke&#34;&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
