<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>network on Home</title>
    <link>https://blog.nhat-tong.com/tags/network/</link>
    <description>Recent content in network on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>thqnhat@outlook.com (Nhat Tong)</managingEditor>
    <webMaster>thqnhat@outlook.com (Nhat Tong)</webMaster>
    <lastBuildDate>Sun, 20 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.nhat-tong.com/tags/network/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure Network - Part 1</title>
      <link></link>
      <pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate>
      <author>thqnhat@outlook.com (Nhat Tong)</author>
      <guid></guid>
      <description>Azure Virtual Networks (VNets) are the fundamental building block of your private network in Azure.
Capabilities of Azure Virtual Networks  Communication with the Internet  Outbound: all resources in a Vnet can communicate outbound to the internet, by default Inbound: public IP or public Load Balancer   Communication between Azure resources  Through a virtual network: list of Azure resources that you can deploy into a virtual network  Through a virtual network service endpoint: extend your virtual network private address space to Azure service resources:  Azure Storage Azure Databases (SQL Database, PostgreSQL, MySQL, MariaDB, CosmosDB) Azure Key Vault Azure App Service Azure Container Registry   Through a virtual network peering: connect virtual networks to each other    Communication between on-premises resources  Point-to-site VPN (P2S) Site-to-site VPN (S2S) Azure ExpressRoute   Filtering network traffic: you can filter network traffic between subnets using:  Network security groups Network virtual appliances   Routing network traffic: Azure route traffic between subnets, connected virtual networks, on-premises networks and the Internet, by default.</description>
    </item>
    
    <item>
      <title>Azure Network - Part 1</title>
      <link></link>
      <pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate>
      <author>thqnhat@outlook.com (Nhat Tong)</author>
      <guid></guid>
      <description></description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link></link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      <author>thqnhat@outlook.com (Nhat Tong)</author>
      <guid></guid>
      <description>Enable IP forwarding on all worker nodes sudo sysctl net.ipv4.conf.all.forwarding=1 echo &amp;#34;net.ipv4.conf.all.forwarding=1&amp;#34; | sudo tee -a /etc/sysctl.conf Install Weave Net in the cluster (on the controller server) kubectl apply -f &amp;#34;https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d &amp;#39;\n&amp;#39;)&amp;amp;env.IPALLOC_RANGE=10.200.0.0/16&amp;#34; kubectl get pods -n kube-system Test networking  Create a deployment  cat &amp;lt;&amp;lt; EOF | kubectl apply --kubeconfig admin.kubeconfig -f - apiVersion: apps/v1 kind: Deployment metadata: name: nginx spec: selector: matchLabels: run: nginx replicas: 2 template: metadata: labels: run: nginx spec: containers: - name: my-nginx image: nginx ports: - containerPort: 80 EOF  Create a service on top of this deployment  kubectl expose deployment/nginx   Verify that the networking is working</description>
    </item>
    
  </channel>
</rss>
