<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cloudsql on Home</title>
    <link>https://blog.nhat-tong.com/tags/cloudsql/</link>
    <description>Recent content in cloudsql on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>thqnhat@outlook.com (Nhat Tong)</managingEditor>
    <webMaster>thqnhat@outlook.com (Nhat Tong)</webMaster>
    <lastBuildDate>Sun, 04 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.nhat-tong.com/tags/cloudsql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GCP - How to connect to CloudSQL through private IP</title>
      <link>https://blog.nhat-tong.com/post/2024/02/gcp/cloudsql/</link>
      <pubDate>Sun, 04 Feb 2024 00:00:00 +0000</pubDate>
      <author>thqnhat@outlook.com (Nhat Tong)</author>
      <guid>https://blog.nhat-tong.com/post/2024/02/gcp/cloudsql/</guid>
      <description>Recently, I worked on a project on which we need to access privately to CloudSQL instance (PostgreSQL instance in our case). In this article, we will explore two options to do so. However, you can use the same technique for other types of CloudSQL (SQL Server or MySQL).
Prerequisite In order to connect privately to CloudSQL, you need to have :
 CloudSQL with private services access connection enabled  Enable Cloud SQL Admin API A private virtual machine (bastion) on the same network as your private services connection  Required access scopes: Cloud Platform &amp;amp; Cloud SQL or Allow full access to all Cloud APIs   A firewall rule allowing IAP on port 22 (SSH)  gcloud compute --project=[YOUR_PROJECT_ID] firewall-rules create allow-iap --direction=INGRESS --priority=1000 --network=[YOUR_NETWORK_NAME] --action=ALLOW --rules=tcp:22 --source-ranges=35.</description>
    </item>
    
  </channel>
</rss>
